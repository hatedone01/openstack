---
- name: Update hosts file
  lineinfile:
    path: /etc/hosts
    line: |
      192.168.56.8 compute01
      192.168.56.9 block01

- name: Create admin environment 
  copy:
    dest: /etc/environment
    content: |
      export OS_USERNAME=admin
      export OS_PASSWORD={{ bootstrap_password }}
      export OS_PROJECT_NAME=admin
      export OS_USER_DOMAIN_NAME=Default
      export OS_PROJECT_DOMAIN_NAME=Default
      export OS_AUTH_URL=http://{{ mariadb_dns }}:5000/v3
      export OS_IDENTITY_API_VERSION=3
      export OS_IMAGE_API_VERSION=2

- name: Create nova user
  command: openstack user create --domain default --password {{ nova_password }} nova
  register: novauser

- name: Print nova user
  debug:
    msg: "{{ novauser.stdout }}"

- name: Add admin roles to nova user
  command: openstack role add --project service --user nova admin

- name: Create nova service
  command: openstack service create --name nova --description "OpenStack Compute" compute
  register: novaservice

- name: Print nova service
  debug:
    msg: "{{ novaservice.stdout }}"

- name: Create Compute API service endpoints
  command: "{{ item }}"
  register: computeapi
  with_items:
    - openstack endpoint create --region {{ region }} compute public http://{{ mariadb_dns }}:8774/v2.1
    - openstack endpoint create --region {{ region }} compute internal http://{{ mariadb_dns }}:8774/v2.1
    - openstack endpoint create --region {{ region }} compute admin http://{{ mariadb_dns }}:8774/v2.1

- name: Print compute api info
  debug:
    msg: "{{ computeapi.results }}"

- name: Install nova pacektes
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  with_items:
    - nova-api
    - nova-conductor
    - nova-novncproxy
    - nova-scheduler

- name: Config glance
  ansible.builtin.template:
    src: ./templates/nova.conf
    dest: /etc/nova/nova.conf
    owner: root
    group: nova
    mode: '0644'

- name: Pubaliet nova-api db
  become: true 
  register: pubedb
  command: su -s /bin/sh -c "nova-manage api_db sync" nova

- name: Print pubeliat db
  debug:
    msg: "{{ pubedb.stdout }}"

- name: Register the cell0 database
  become: true 
  register: cell0db
  command: su -s /bin/sh -c "nova-manage cell_v2 map_cell0" nova

- name: Print cell0 database
  debug:
    msg: "{{ cell0db.stdout }}"

- name: Register the cell1 
  become: true 
  register: cell1
  command: su -s /bin/sh -c "nova-manage cell_v2 create_cell --name=cell1 --verbose" nova

- name: Print cell1 
  debug:
    msg: "{{ cell1.stdout }}"

- name: Populate the nova database
  become: true 
  register: pubdb
  command: su -s /bin/sh -c "nova-manage db sync" nova

- name: Print the nova database
  debug:
    msg: "{{ pubdb.stdout }}"

- name: Verify nova cell0 and cell1 
  become: true 
  register: verify
  command: su -s /bin/sh -c "nova-manage cell_v2 list_cells" nova

- name: Print nova cell0 and cell1
  debug:
    msg: "{{ verify.stdout }}"

- name: Restart nova services
  ansible.builtin.service:
    name: "{{ item }}"
    state: restarted
  with_items:
    - nova-api
    - nova-scheduler
    - nova-conductor
    - nova-novncproxy

- name: Enable mariadb
  ansible.builtin.service:
    name: "{{ item }}"
    enabled: yes
  with_items:
    - nova-api
    - nova-scheduler
    - nova-conductor
    - nova-novncproxy

- name: Include nova-compute role
  include_role:
    name: nova-compute
    apply:
      delegate_to: "{{ item }}"
  with_items: "{{ groups['compute'] }}"

- name: Pause for 1 minit 
  ansible.builtin.pause:
    minutes: 1

- name: Enable admin-only CLI commands
  command: openstack compute service list --service nova-compute
  register: shownovecompute

- name: Print nova admin-only
  debug:
    msg: "{{ shownovecompute.stdout }}"

- name: Discover compute hosts
  command: su -s /bin/sh -c "nova-manage cell_v2 discover_hosts --verbose" nova
  register: discover

- name: Print nova admin-only
  debug:
    msg: "{{ discover.stdout }}"

- name: Remove /etc/environment
  ansible.builtin.file:
    path: /etc/environment
    state: absent