---
- name: Install keystone
  apt:
    name: "{{ item }}"
  with_items: 
      - keystone
      - python3-openstackclient

- name: Config keystone
  template:
    src: ./templates/keystone.conf
    dest: /etc/keystone/keystone.conf
    owner: keystone
    group: keystone
  
- name: Run Populate the Identity service database
  ansible.builtin.shell: su -s /bin/sh -c "keystone-manage db_sync" keystone
  become: true 

- name: Initialize Fernet key repositories
  ansible.builtin.shell: "{{ item }}"
  become: true
  with_items:
    - keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
    - keystone-manage credential_setup --keystone-user keystone --keystone-group keystone

- name: Initialize Fernet key repositories
  ansible.builtin.shell: keystone-manage bootstrap --bootstrap-password "{{ bootstrap_password }}" --bootstrap-admin-url http://"{{ mariadb_dns }}":5000/v3/ --bootstrap-internal-url http://"{{ mariadb_dns }}":5000/v3/ --bootstrap-public-url http://"{{ mariadb_dns }}":5000/v3/ --bootstrap-region-id {{ region }}
  become: true 

- name: Config apache2
  template:
    src: ./templates/apache2.conf
    dest: /etc/apache2/apache2.conf
    owner: root
    group: root

- name: Restart apache2
  ansible.builtin.service:
    name: apache2
    state: restarted

- name: Restart apache2
  ansible.builtin.service:
    name: apache2
    enabled: yes

- name: Customize /etc/environment
  ansible.builtin.lineinfile:
    dest: /etc/environment
    state: present
    regexp: "^{{ item }}"
    line: "{{ item }}"
  with_items:
    - OS_USERNAME=admin
    - OS_PASSWORD={{ bootstrap_password }}
    - OS_PROJECT_NAME=admin
    - OS_USER_DOMAIN_NAME=Default
    - OS_PROJECT_DOMAIN_NAME=Default
    - OS_AUTH_URL=http://{{ mariadb_dns }}:5000/v3
    - OS_IDENTITY_API_VERSION=3

- name: Create openstack domain
  command: openstack domain create --description "{{ domain_description }}" {{ domainname }}
  register: openstack_domain

- name: Print openstack domain
  debug:
    msg: "{{ openstack_domain.stdout }}"

- name: Create project
  command: "{{ item }}"
  register: project
  with_items:
    - openstack project create --domain default --description "Service Project" service 
    - openstack project create --domain {{ domainname }} --description "{{ project_desctiption }}" {{ project_name }}
 
- name: Print project
  debug:
    msg: "{{ project.results }}"

- name: Create user
  command: "{{ item }}"
  with_items:
    - openstack user create --domain {{ domainname }} --password {{ new_user_password }} {{ new_user_username }}
  register: user

- name: Print user
  debug:
    msg: "{{ user.results }}"

- name: Create roles
  command: "{{ item }}"
  with_items:
#    - openstack role create {{ new_projectname }}-admin
    - openstack role create {{ project_name }}
  register: roles

- name: Print roles
  debug:
    msg: "{{ roles.results }}"

- name: Add roles to user
  command: "{{ item }}"
  with_items:
#    - openstack role add --project {{ new_projectname }} --user {{ new_user_username }} {{ new_projectname }}-admin
    - openstack role add --project {{ project_name }} --user {{ new_user_username }} {{ project_name }}

- name: Remove variabel 
  shell: unset OS_AUTH_URL OS_PASSWORD

- name: Remove OS_PASSWORD and OS_AUTH_URL in /etc/environment
  ansible.builtin.lineinfile:
    dest: /etc/environment
    state: absent
    regexp: "^{{ item }}"
  with_items:
    - OS_PASSWORD={{ bootstrap_password }}
    - OS_AUTH_URL=http://{{ mariadb_dns }}:5000/v3 

- name: Request token
  command: "{{ item }}"
  with_items:
    - openstack --os-auth-url http://{{ mariadb_dns }}:5000/v3 --os-project-domain-name Default --os-user-domain-name Default --os-project-name admin --os-username admin token issue --os-password {{ bootstrap_password }}
    - openstack --os-auth-url http://{{ mariadb_dns }}:5000/v3 --os-project-domain-name {{ domainname }} --os-user-domain-name {{ domainname }}   --os-project-name {{ project_name }} --os-username {{ new_user_username }} token issue --os-password {{ new_user_password }}
#    - openstack --os-auth-url http://{{ mariadb_dns }}:5000/v3 --os-project-domain-name {{ domainname }} --os-user-domain-name {{ domainname }}   --os-project-name {{ new_projectname }} --os-username {{ new_user_username }} token issue --os-password {{ new_user_password }}
  register: token

- name: Print tokens
  debug:
    msg: "{{ token.results }}"

- name: Remove /etc/environment
  ansible.builtin.file:
    path: /etc/environment
    state: absent

- name: Create admin environment script
  copy:
    dest: /var/openstack-admin.sh
    content: |
      export OS_USERNAME=admin
      export OS_PASSWORD={{ bootstrap_password }}
      export OS_PROJECT_NAME=admin
      export OS_USER_DOMAIN_NAME=Default
      export OS_PROJECT_DOMAIN_NAME=Default
      export OS_AUTH_URL=http://{{ mariadb_dns }}:5000/v3
      export OS_IDENTITY_API_VERSION=3
      export OS_IMAGE_API_VERSION=2

- name: Create {{ project_name }} environment script
  copy:
    dest: /var/openstack-{{ project_name }}.sh
    content: |
      export OS_USERNAME={{ new_user_username }}
      export OS_PASSWORD={{ new_user_password }}
      export OS_PROJECT_NAME={{ project_name }}
      export OS_USER_DOMAIN_NAME={{ domainname }}
      export OS_PROJECT_DOMAIN_NAME={{ domainname }}
      export OS_AUTH_URL=http://{{ mariadb_dns }}:5000/v3
      export OS_IDENTITY_API_VERSION=3
      export OS_IMAGE_API_VERSION=2

#- name: Create {{ new_projectname }} environment script
#  copy:
#    dest: /var/openstack-{{ new_projectname }}.sh
#    content: |
#      export OS_USERNAME={{ new_user_username }}
#      export OS_PASSWORD={{ new_user_password }}
#      export OS_PROJECT_NAME={{ new_projectname }}
#      export OS_USER_DOMAIN_NAME={{ domainname }}
#      export OS_PROJECT_DOMAIN_NAME={{ domainname }}
#      export OS_AUTH_URL=http://{{ mariadb_dns }}:5000/v3
#      export OS_IDENTITY_API_VERSION=3
#      export OS_IMAGE_API_VERSION=2