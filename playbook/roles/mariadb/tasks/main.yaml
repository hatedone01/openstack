---
- name: Update repo
  ansible.builtin.apt:
    update_cache: yes

- name: Install recomendet packet
  apt:
    name:
      - mariadb-server 
      - python3-pymysql
    state: present

- name: Config mariadb
  template:
    src: ./templates/99-openstack.cnf
    dest: /etc/mysql/mariadb.conf.d/99-openstack.cnf

  # mysql_secure_installation
- name: Update MariaDB root password
  mysql_user:
    login_host: 'localhost'
    login_user: 'root'
    login_password: " "
    name: 'root'
    host: "{{ item }}"
    password: "{{ DB_ROOT_PASS }}"
    state: present
  with_items:
    - 127.0.0.1
    - ::1
    - localhost

#- name: Set ~/.my.cnf file
#  template: src=dotmy.cnf.j2 dest=/root/.my.cnf mode=0600

  # mysql_secure_installation
- name: Delete anonymous MySQL user
  mysql_user: 
    login_host: 'localhost'
    login_user: 'root'
    login_password: "{{ DB_ROOT_PASS }}"
    name: " "
    host: "{{ item }}"
    state: absent
  with_items:
    - localhost
    - "{{ansible_nodename}}"

  # mysql_secure_installation
- name: Delete Hostname based MySQL user
  mysql_user: #name=root host="{{ansible_nodename}}" state=absent
    login_host: 'localhost'
    login_user: 'root'
    login_password: "{{ DB_ROOT_PASS }}"
    name: 'root'
    host: "{{ansible_nodename}}"
    state: absent

  # mysql_secure_installation
- name: Remove MySQL test database
  mysql_db: #name=test state=absent
    login_host: 'localhost'
    login_user: 'root'
    login_password: "{{ DB_ROOT_PASS }}"
    name: 'test'
    state: 'absent'

- name: Create DB user
  community.mysql.mysql_user:
    login_user: root
    login_password: "{{ DB_ROOT_PASS }}"
    state: present
    name: "{{ DB_USER }}"
    password: "{{ DB_USER_PASS }}"
    priv: '*.*:ALL,GRANT'
    tls_requires:
      x509:

- name: Create keystone DB
  community.mysql.mysql_db:
    check_implicit_admin: yes
    login_user: root
    login_password: "{{ DB_ROOT_PASS }}"
    name: 
      - keystone
      - glance
      - nova_api
      - nova
      - nova_cell0
      - placement
      - neutron
      - cinder
    state: present

#- name: Create glance DB
#  community.mysql.mysql_db:
#    check_implicit_admin: yes
#    login_user: root
#    login_password: "{{ DB_ROOT_PASS }}"
#    name: glance
#    state: present

#- name: Create nova DB
#  community.mysql.mysql_db:
#    check_implicit_admin: yes
#    login_user: root
#    login_password: "{{ DB_ROOT_PASS }}"
#    name: 
#      - nova_api
#      - nova
#      - nova_cell0
#    state: present

#- name: Create placement DB
#  community.mysql.mysql_db:
#    check_implicit_admin: yes
#    login_user: root
#    login_password: "{{ DB_ROOT_PASS }}"
#    name: placement
#    state: present

#- name: Create neutron DB
#  community.mysql.mysql_db:
#    check_implicit_admin: yes
#    login_user: root
#    login_password: "{{ DB_ROOT_PASS }}"
#    name: neutron
#    state: present

#- name: Create cinder DB
#  community.mysql.mysql_db:
#    check_implicit_admin: yes
#    login_user: root
#    login_password: "{{ DB_ROOT_PASS }}"
#    name: cinder
#    state: present

- name: Create keystone user 
  community.mysql.mysql_user:
    login_user: root
    login_password: "{{ DB_ROOT_PASS }}"
    state: present
    name: keystone
    password: "{{ KEYSTONE_DB_PASS }}"
    priv:
      'keystone.*': 'ALL,GRANT'

- name: Create glance user 
  community.mysql.mysql_user:
    login_user: root
    login_password: "{{ DB_ROOT_PASS }}"
    state: present
    name: glance
    password: "{{ GLANCE_DB_PASS }}"
    priv:
      'glance.*': 'ALL,GRANT'

- name: Create nova user 
  community.mysql.mysql_user:
    login_user: root
    login_password: "{{ DB_ROOT_PASS }}"
    state: present
    name: nova
    password: "{{ NOVA_DB_PASS }}"
    priv:
      'nova_api.*': 'ALL,GRANT'
      'nova.*': 'ALL,GRANT'
      'nova_cell0.*': 'ALL,GRANT'

- name: Create placement user 
  community.mysql.mysql_user:
    login_user: root
    login_password: "{{ DB_ROOT_PASS }}"
    state: present
    name: placement
    password: "{{ PLACEMENT_DB_PASS }}"
    priv:
      'placement.*': 'ALL,GRANT'

- name: Create neutron user 
  community.mysql.mysql_user:
    login_user: root
    login_password: "{{ DB_ROOT_PASS }}"
    state: present
    name: neutron
    password: "{{ NEUTRON_DB_PASS }}"
    priv:
      'neutron.*': 'ALL,GRANT'

- name: Create cinder user 
  community.mysql.mysql_user:
    login_user: root
    login_password: "{{ DB_ROOT_PASS }}"
    state: present
    name: cinder
    password: "{{ CINDER_DB_PASS }}"
    priv:
      'cinder.*': 'ALL,GRANT'

- name: Restart mariadb
  ansible.builtin.service:
    name: mariadb
    state: restarted

- name: Enable mariadb
  ansible.builtin.service:
    name: mariadb
    enabled: yes