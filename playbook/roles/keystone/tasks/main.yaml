---
- name: Install keystone
  apt:
    name: "{{ item }}"
  with_items: 
      - keystone
      - python3-openstackclient

- name: Config keystone
  template:
    src: ./templates/keystone.conf
    dest: /etc/keystone/keystone.conf
    owner: keystone
    group: keystone

- name: Run Populate the Identity service database
  shell: su -s /bin/sh -c "keystone-manage db_sync" keystone

- name: Initialize Fernet key repositories
  shell: "{{ item }}"
  with_items:
    - keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
    - keystone-manage credential_setup --keystone-user keystone --keystone-group keystone

- name: Bootstrap the Identity service
  shell: keystone-manage bootstrap --bootstrap-password {{ ADMIN_PASS }} --bootstrap-admin-url http://{{ KEYSTONE_DNS }}:5000/v3/ --bootstrap-internal-url http://{{ KEYSTONE_DNS }}:5000/v3/ --bootstrap-public-url http://{{ KEYSTONE_DNS }}:5000/v3/ --bootstrap-region-id {{ REGION }}

- name: Config apache2
  template:
    src: ./templates/apache2.conf
    dest: /etc/apache2/apache2.conf
    owner: root
    group: root

- name: Restart apache2
  ansible.builtin.service:
    name: apache2
    state: restarted

- name: Restart apache2
  ansible.builtin.service:
    name: apache2
    enabled: yes

- name: Customize /etc/environment environment file
  ansible.builtin.lineinfile:
    dest: /etc/environment
    state: present
    regexp: "^{{ item }}"
    line: "{{ item }}"
  with_items:
    - OS_USERNAME=admin
    - OS_PASSWORD={{ ADMIN_PASS }}
    - OS_PROJECT_NAME=admin
    - OS_USER_DOMAIN_NAME=Default
    - OS_PROJECT_DOMAIN_NAME=Default
    - OS_AUTH_URL=http://{{ KEYSTONE_DNS }}:5000/v3
    - OS_IDENTITY_API_VERSION=3

- name: Create openstack domain
  command: openstack domain create --description "{{ DOMAIN_DESCRIPTION }}" {{ DOMAIN }}
  register: openstack_domain

- name: Print openstack domain
  debug:
    msg: "{{ openstack_domain.stdout }}"

- name: Create project 
  command: "{{ item }}"
  with_items:
    - openstack project create --domain default --description "Service Project" service 
    - openstack project create --domain {{ DOMAIN }} --description "{{ PROJECT_DESCRIPTION }}" {{ PROJECT_NAME }}
  register: project

- name: Print project
  debug:
    msg: "{{ project.results }}"

- name: Create user
  command: "{{ item }}"
  with_items:
    - openstack user create --domain {{ DOMAIN }} --password {{ USER_PASS }} {{ USERNAME }}
    - openstack user create --domain default --password {{ GLANCE_USER_PASS }} glance
    - openstack user create --domain default --password {{ GLANCE_USER_READ_PASS }} glance_reade
    - openstack user create --domain default --password {{ PLACEMENT_PASS }} placement
    - openstack user create --domain default --password {{ NOVA_PASS }} nova
    - openstack user create --domain default --password {{ NEUTRON_PASS }} neutron
    - openstack user create --domain default --password {{ CINDER_PASS }} cinder
  register: users

- name: Print user
  debug:
    msg: "{{ users.results }}"

- name: Create role
  command: openstack role create admin-{{ PROJECT_NAME }}
  register: roles

- name: Print roles
  debug:
    msg: "{{ roles.stdout }}"

- name: Add roles to user
  command: "{{ item }}"
  with_items:
    - openstack role add --project {{ PROJECT_NAME }} --user {{ USERNAME }} admin-{{ PROJECT_NAME }}
    - openstack role add --project service --user glance admin
    - openstack role add --user glance_reade --user-domain Default --system all reader
    - openstack role add --project service --user placement admin
    - openstack role add --project service --user nova admin
    - openstack role add --project service --user neutron admin
    - openstack role add --project service --user cinder admin

- name: Create services entity
  command: "{{ item }}" 
  with_items:
    - openstack service create --name glance --description "OpenStack Image" image
    - openstack service create --name placement --description "Placement API" placement
    - openstack service create --name nova --description "OpenStack Compute" compute
    - openstack service create --name neutron --description "OpenStack Networking" network
    - openstack service create --name cinderv3 --description "OpenStack Block Storage" volumev3
  register: services

- name: Print services 
  debug:
    msg: "{{ services.results }}"

- name: Create API endpoint
  command: "{{ item }}" 
  with_items:
    - openstack endpoint create --region {{ REGION }} image public http://{{ GLANCE_DNS }}:9292
    - openstack endpoint create --region {{ REGION }} image internal http://{{ GLANCE_DNS }}:9292
    - openstack endpoint create --region {{ REGION }} image admin http://{{ GLANCE_DNS }}:9292
    - openstack endpoint create --region {{ REGION }} placement public http://{{ PLACEMENT_DNS }}:8778
    - openstack endpoint create --region {{ REGION }} placement internal http://{{ PLACEMENT_DNS }}:8778
    - openstack endpoint create --region {{ REGION }} placement admin http://{{ PLACEMENT_DNS }}:8778
    - openstack endpoint create --region {{ REGION }} compute public http://{{ NOVA_DNS }}:8774/v2.1
    - openstack endpoint create --region {{ REGION }} compute internal http://{{ NOVA_DNS }}:8774/v2.1
    - openstack endpoint create --region {{ REGION }} compute admin http://{{ NOVA_DNS }}:8774/v2.1
    - openstack endpoint create --region {{ REGION }} network public http://{{ NEUTRON_DNS }}:9696
    - openstack endpoint create --region {{ REGION }} network internal http://{{ NEUTRON_DNS }}:9696
    - openstack endpoint create --region {{ REGION }} network admin http://{{ NEUTRON_DNS }}:9696
    - openstack endpoint create --region {{ REGION }} volumev3 public http://{{ CINDER_DNS }}:8776/v3/%\(project_id\)s
    - openstack endpoint create --region {{ REGION }} volumev3 internal http://{{ CINDER_DNS }}:8776/v3/%\(project_id\)s
    - openstack endpoint create --region {{ REGION }} volumev3 admin http://{{ CINDER_DNS }}:8776/v3/%\(project_id\)s
  register: services

- name: Print roles
  debug:
    msg: "{{ services.results }}"

- name: Remove variabel 
  shell: unset OS_AUTH_URL OS_PASSWORD

- name: Remove OS_PASSWORD and OS_AUTH_URL in /etc/environment
  ansible.builtin.lineinfile:
    dest: /etc/environment
    state: absent
    regexp: "^{{ item }}"
  with_items:
    - OS_PASSWORD={{ ADMIN_PASS }}
    - OS_AUTH_URL=http://{{ KEYSTONE_DNS }}:5000/v3 

- name: Request token
  command: "{{ item }}"
  with_items:
    - openstack --os-auth-url http://{{ KEYSTONE_DNS }}:5000/v3 --os-project-domain-name Default --os-user-domain-name Default --os-project-name admin --os-username admin token issue --os-password {{ ADMIN_PASS }}
    - openstack --os-auth-url http://{{ KEYSTONE_DNS }}:5000/v3 --os-project-domain-name {{ DOMAIN }} --os-user-domain-name {{ DOMAIN }}   --os-project-name {{ PROJECT_NAME }} --os-username {{ USERNAME }} token issue --os-password {{ USER_PASS }}
  register: token

- name: Print tokens
  debug:
    msg: "{{ token.results }}"

- name: Create admin environment 
  copy:
    dest: /etc/environment
    content: |
      export OS_USERNAME=admin
      export OS_PASSWORD={{ ADMIN_PASS }}
      export OS_PROJECT_NAME=admin
      export OS_USER_DOMAIN_NAME=Default
      export OS_PROJECT_DOMAIN_NAME=Default
      export OS_AUTH_URL=http://{{ KEYSTONE_DNS }}:5000/v3
      export OS_IDENTITY_API_VERSION=3
      export OS_IMAGE_API_VERSION=2

- name: Create admin environment script
  copy:
    dest: /var/openstack-admin.sh
    content: |
      export OS_USERNAME=admin
      export OS_PASSWORD={{ ADMIN_PASS }}
      export OS_PROJECT_NAME=admin
      export OS_USER_DOMAIN_NAME=Default
      export OS_PROJECT_DOMAIN_NAME=Default
      export OS_AUTH_URL=http://{{ KEYSTONE_DNS }}:5000/v3
      export OS_IDENTITY_API_VERSION=3
      export OS_IMAGE_API_VERSION=2

- name: Create {{ PROJECT_NAME }} environment script
  copy:
    dest: /var/openstack-{{ PROJECT_NAME }}.sh
    content: |
      export OS_USERNAME={{ USERNAME }}
      export OS_PASSWORD={{ USER_PASS }}
      export OS_PROJECT_NAME={{ PROJECT_NAME }}
      export OS_USER_DOMAIN_NAME={{ DOMAIN }}
      export OS_PROJECT_DOMAIN_NAME={{ DOMAIN }}
      export OS_AUTH_URL=http://{{ KEYSTONE_DNS }}:5000/v3
      export OS_IDENTITY_API_VERSION=3
      export OS_IMAGE_API_VERSION=2